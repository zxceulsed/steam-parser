from bs4 import BeautifulSoup
import requests
import time
import json
from pathlib import Path
from float_parser import get_swapgg_float

def get_steam_cookies():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—É–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ"""
    cookie_file = Path("cookies.json")
    cookies = {}
    
    try:
        if cookie_file.exists():
            with open(cookie_file, 'r', encoding='utf-8') as f:
                cookies_data = json.load(f)
                cookies = {c['name']: c['value'] for c in cookies_data}
        else:
            print("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫—É–∫–∏")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É–∫–∏: {e}")
    
    return cookies

def build_json_url(url: str) -> str:
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é —Å—Å—ã–ª–∫—É –≤ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JSON —Å 100 –ø–æ–∑–∏—Ü–∏—è–º–∏.
    –ï—Å–ª–∏ –≤ —Å—Å—ã–ª–∫–µ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç '/render/', –æ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è.
    """
    if "/render/" in url:
        return url
    url = url.rstrip("/")  # —É–±–∏—Ä–∞–µ–º –∑–∞–≤–µ—Ä—à–∞—é—â–∏–π —Å–ª–µ—à, –µ—Å–ª–∏ –µ—Å—Ç—å
    json_url = (
        f"{url}/render/"
        f"?query=&start=0&count=100&country=RU&language=english&currency=5"
    )
    return json_url


def parse_price(price_str: str) -> float:
    """–ü–∞—Ä—Å–∏—Ç —Ü–µ–Ω—É –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Å –ª—é–±—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –≤–∞–ª—é—Ç—ã"""
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ —Ç–æ—á–µ–∫ –∏ –∑–∞–ø—è—Ç—ã—Ö
    clean_str = (
        price_str.strip()
        .replace(" ", "")      # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
        .replace("—Ä—É–±.", "")   # –£–¥–∞–ª—è–µ–º –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ —Ä—É–±–ª–µ–π
        .replace("$", "")      # –£–¥–∞–ª—è–µ–º –¥–æ–ª–ª–∞—Ä—ã
        .replace(",", ".")     # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—ã–µ –Ω–∞ —Ç–æ—á–∫–∏
    )
    
    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Ç–æ—á–∫—É
    clean_str = "".join([c for c in clean_str if c.isdigit() or c == "."])
    
    try:
        return float(clean_str)
    except ValueError:
        return 0.0  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 0 –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

async def process_market_url(url: str, target_min: float, target_max: float, max_percent: float) -> str:
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è JSON-–∑–∞–ø—Ä–æ—Å–∞
        json_url = build_json_url(url)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Steam
        response = requests.get(
            json_url,
            cookies=get_steam_cookies(),
            headers={
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
                "Accept-Language": "en-US,en;q=0.9"
            },
            timeout=15
        )
        
        if response.status_code != 200:
            return f"–û—à–∏–±–∫–∞: Steam –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}"
        
        # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        data = response.json()
        html_results = data.get("results_html", "")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BeautifulSoup –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        soup = BeautifulSoup(html_results, 'html.parser')
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–Ω–∞
        title_element = soup.find('div', class_='market_listing_nav')
        title = title_element.text.strip() if title_element else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç"
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
        items = soup.select('div.market_listing_row')
        if not items:
            return ""
        
        # –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ (–ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ)
        first_price_str = items[0].select_one('.market_listing_price_with_fee').text.strip()
        base_price = parse_price(first_price_str)
        
        found_items = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        for index, item in enumerate(items):
            try:
                # –ü–∞—Ä—Å–∏–º —Ü–µ–Ω—É
                price_element = item.select_one('.market_listing_price_with_fee')
                price_str = price_element.text.strip() if price_element else "N/A"
                if price_str == "N/A":
                    continue
                
                current_price = parse_price(price_str)
                if current_price <= 0:
                    continue
                
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ —Ü–µ–Ω–µ
                price_diff_percent = 0.0 if index == 0 else ((current_price - base_price) / base_price) * 100
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ (–∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞)
                if index != 0 and price_diff_percent > max_percent:
                    continue
                
                # –ü–æ–ª—É—á–∞–µ–º float
                inspect_link = item.select_one('a[href^="steam://"]')['href']
                float_value = get_swapgg_float(inspect_link)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω float
                if target_min <= float_value <= target_max:
                    found_items.append({
                        'title': title,
                        'price': current_price,
                        'float': float_value,
                        'price_diff': price_diff_percent,
                        'url': url
                    })
                
                time.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                
            except Exception as inner_e:
                print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞: {inner_e}")
                continue

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if found_items:
            return '\n\n'.join([
                f"üéâ –ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–∫–∏–Ω!\n"
                f"üè∑ –ù–∞–∑–≤–∞–Ω–∏–µ: {item['title']}\n"
                f"üí∞ –¶–µ–Ω–∞: {item['price']:.2f} —Ä—É–±.\n"
                f"üéö Float: {item['float']:.8f}\n"
                f"üìà –û—Ç–ª–∏—á–∏–µ –æ—Ç –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã: {item['price_diff']:.1f}%\n"
                f"üîó –°—Å—ã–ª–∫–∞: {item['url']}"
                for item in found_items
            ])
        return ""
    
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {str(e)}"